name: Test & Deploy to GitHub Pages

on:
  push:
    branches:
      - main
  pull_request:
    branches: ['**']

permissions:
  contents: write # Needed for deployment to gh-pages/preview branches

jobs:
  test:
    name: Test & Validate
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run type check
        run: npm run check

      - name: Run linter
        run: npm run lint

      - name: Run tests
        run: npm run test:run

      - name: Run tests with coverage
        run: npm run test:coverage
        continue-on-error: true # Don't fail build on coverage threshold (yet)

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        if: github.event_name == 'pull_request'
        with:
          files: ./coverage/coverage-final.json
          fail_ci_if_error: false

  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: test # Wait for tests to pass
    # Deploy on: push to main OR PR with 'preview' label
    if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || (github.event_name == 'pull_request'))

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Build for GitHub Pages
        env:
          GITHUB_PAGES: 'true'
        run: npm run build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs
          # Deploy to 'gh-pages' for main, 'preview' for PRs
          publish_branch: ${{ github.event_name == 'push' && 'gh-pages' || 'preview' }}
          force_orphan: true # Keep branches clean (no history)
          # Dynamic commit message based on trigger
          commit_message: "${{ github.event_name == 'push' && 'Deploy dev from main branch' || format('Deploy preview from PR #{0}', github.event.pull_request.number) }}"
